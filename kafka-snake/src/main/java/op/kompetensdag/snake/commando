# START KAFKA BROKER
docker-compose up -d

# CREATE PRODUCER
# OPEN BROKER CLI

kafka-console-producer --bootstrap-server localhost:9092 --topic game_input

kafka-console-consumer --bootstrap-server localhost:9092 \
    --topic game_output \
    --from-beginning \
    --formatter kafka.tools.DefaultMessageFormatter \
    --property print.key=true \
    --property print.value=true \
    --property key.deserializer=org.apache.kafka.common.serialization.StringDeserializer \
    --property value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# CREATE TOPICS
# GO TO BROKER CLI
kafka-topics --bootstrap-server localhost:9092 --topic game_input --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic game_output --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic movement_commands --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic game_admin_commands --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic game_status --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic head_direction --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic game_table_entries --create --partitions 3 --replication-factor 1 |
kafka-topics --bootstrap-server localhost:9092 --topic game_ticks --create --partitions 3 --replication-factor 1  |
kafka-topics --bootstrap-server localhost:9092 --topic Illegal_arguments_topic --create --partitions 3 --replication-factor 1  |
kafka-topics --bootstrap-server localhost:9092 --topic head_direction_3 --create --partitions 3 --replication-factor 1




# DELETE TOPICS
# GO TO BROKER CLI
kafka-topics --bootstrap-server localhost:9092 --list | while read topic_name ; do kafka-topics --bootstrap-server localhost:9092 --delete --topic $topic_name ; done
